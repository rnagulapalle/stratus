!function(root,factory){"function"==typeof define&&define.amd?define(["stratus","underscore","angular","stratus.services.collection","stratus.services.utility"],factory):factory(root.Stratus,root._,root.angular)}(this,function(Stratus,_,angular){Stratus.Controllers.UserFilter=["$scope","$log","Collection","utility",function($scope,$log,Collection,utility){function retrieveData(url,query){return query=angular.isUndefined(query)||null==query?"":query,utility.sendRequest(null,"GET",url+query).then(function(response){return response.hasOwnProperty("data")&&response.data.hasOwnProperty("payload")?response.data.payload:[]},function(error){console.error(error)})}Stratus.Instances[_.uniqueId("user_filter_")]=$scope,$scope.Stratus=Stratus,$scope._=_,$scope.userRoles=[],$scope.showOnly=[],$scope.more=!1,$scope.init=function(){$scope.initRoles()},$scope.initRoles=function(){Promise.resolve($scope.queryRole()).then(function(value){$scope.userRoles=value})},$scope.toggle=function(roleId){var index=$scope.showOnly.indexOf(roleId);-1!==index?$scope.showOnly.splice(index,1):$scope.showOnly.push(roleId),$scope.collection.meta.set("api.options.identityRoles",$scope.showOnly),$scope.collection.fetch().then(function(response){$log.log("users",response)}),delete $scope.collection.meta.get("api").options},$scope.moreFilter=function(){$scope.more=!$scope.more},$scope.locationCustom=function(chip){return angular.isObject(chip)?chip:{address:chip}},$scope.queryRole=function(query){return retrieveData("/Api/Role?p=1&q=",query)},$scope.queryMailList=function(query){return retrieveData("/Api/MailList?p=1&q=",query)},$scope.queryLocation=function(query){return retrieveData("/Api/Location?p=1&q=",query)}}]});