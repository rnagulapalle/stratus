!function(root,factory){"function"==typeof define&&define.amd?define(["stratus","underscore","jquery","angular","angular-material","angular-file-upload","stratus.components.search","stratus.components.pagination","stratus.directives.singleClick","stratus.directives.src","stratus.services.registry","stratus.services.utility","stratus.services.media"],factory):factory(root.Stratus,root._,root.jQuery,root.angular)}(this,function(Stratus,_,jQuery,angular){Stratus.Modules.ngFileUpload=!0,Stratus.Components.MediaSelector={bindings:{ngModel:"=",target:"@",limit:"@"},controller:function($scope,$http,$attrs,$parse,$element,Upload,$compile,$timeout,Registry,$mdPanel,$q,$mdDialog,utility,media){function DialogController(mdPanelRef){$scope.closeDialog=function(){$scope.infoId=null,mdPanelRef.close()}}function ZoomController(mdPanelRef){$scope.deleteMediaFromLibrary=function(fileId){mdPanelRef.close(),$scope.deleteFromMedia(fileId)},$scope.closeZoom=function(){$scope.infoId=null,mdPanelRef.close()}}function configData(type){var config={attachTo:angular.element(document.body),scope:$scope,disableParentScroll:this.disableParentScroll,hasBackdrop:!0,panelClass:"media-dialog",position:$mdPanel.newPanelPosition().absolute().center(),trapFocus:!0,zIndex:150,clickOutsideToClose:!1,escapeToClose:!0,focusOnOpen:!0};switch(type){case"zoom":config.controller=ZoomController,config.templateUrl="mediaDetail.html";break;case"upload_file":config.controller=DialogController,config.controllerAs="ctrl",config.id="uploadPanel",config.templateUrl="uploadedFiles.html"}return"upload_to_lib"===type&&(config.controller=DialogController,config.controllerAs="ctrl",config.templateUrl="uploadedFiles.html"),config}utility.componentInitializer(this,$scope,$attrs,"media_selector",!0),$scope.registry=new Registry,$scope.registry.fetch({target:$attrs.target||"Media",id:null,manifest:!1,decouple:!0,api:{limit:_.isJSON($attrs.limit)?JSON.parse($attrs.limit):30}},$scope),$scope.showLibrary=!1,$scope.showDragDropLibrary=!1,$scope.draggedFiles=[],$scope.files=[],$scope.draggedDivChanged=!1,$scope.dropDisabled=!1,$scope.tagsModel={},$scope.infoId=null,$scope.$watch("$ctrl.ngModel",function(data){_.isUndefined(data)||_.isEqual($scope.draggedFiles,data)||($scope.draggedFiles=data||[])}),$scope.$watch("draggedFiles",function(data){!_.isUndefined($scope.$ctrl.ngModel)&&_.isEqual($scope.draggedFiles,$scope.$ctrl.ngModel)||($scope.$ctrl.ngModel=$scope.draggedFiles)},!0),$scope.$watch("tagsModel",function(data){if(void 0!==$scope.infoId){var dataRes={};dataRes.tags=$scope.tagsModel.tags,$scope.updateMedia($scope.infoId,dataRes)}},!0),$scope.uploadComp=!1,$scope.movedFileId="",$scope.errorUpload=!1,$scope.libraryVisible=!1,$scope.zoomView=function(event){$scope.mediaDetail=event,$scope.selectedName={name:$scope.mediaDetail.name,editing:!1},$scope.selectedDesc={description:$scope.mediaDetail.description,editing:!1},$mdPanel.open(configData("zoom")),$scope.tagsModel.tags=$scope.mediaDetail.tags,$scope.infoId=$scope.mediaDetail.id,$scope.imageSrc=$scope.mediaDetail.url},$scope.draggedFileId="",$scope.dragSelected=function($isDragging,$class,$event){"dragover"===$event.type&&""!==$event.explicitOriginalTarget.id&&($scope.draggedFileId=$event.explicitOriginalTarget.id),"dragleave"===$event.type&&$scope.removeFromSelected(parseInt($scope.draggedFileId))},$scope.beforeChange=function(file,$event){"move"===$event.dataTransfer.dropEffect?media.fetchOneMedia($scope.movedFileId).then(function(response){$scope.draggedFiles.push(response.data.payload);for(var i=0;i<$scope.collection.models.length;i++)$scope.collection.models[i].data.id===$scope.movedFileId&&($scope.collection.models[i].data.selectedClass=!0);$scope.movedFileId=""}):($scope.imageMoved=!1,$scope.uploadFiles(),$scope.movedFileId="")},$scope.imageMoved=!1,$scope.dragFromLib=function($isDragging,$class,$event,fileId){Stratus.Environment.get("production")||(console.log("isDragging",$isDragging),console.log("event",$event),console.log("fileId",fileId)),"dragleave"===$event.type&&($scope.movedFileId=fileId,$scope.imageMoved=!0)},$scope.dragClass=!1,$scope.uploadFiles=function(files){$scope.showLibrary=!1,$scope.uploadComp=!1,$scope.draggedDivChanged=!0,$mdPanel.open(configData("upload_file"))},$scope.removeFromSelected=function(fileId){for(var i=$scope.draggedFiles.length-1;i>=0;i--)$scope.draggedFiles[i].id===fileId&&$scope.draggedFiles.splice(i,1);for(var j=0;j<$scope.collection.models.length;j++)$scope.collection.models[j].data.id===fileId&&($scope.collection.models[j].data.selectedClass=!1)},$scope.deleteFromMedia=function(fileId){Stratus.Environment.get("production")||console.log(fileId);var deleteMedia=$mdDialog.confirm().title("DELETE MEDIA").textContent("Are you sure you want to permanently delete this from your library? You may get broken images if any content still uses this image.").ok("Yes").cancel("No");$mdDialog.show(deleteMedia).then(function(){media.deleteMedia(fileId).then(function(response){if($scope.draggedFiles.length>0)for(var k=0;k<$scope.draggedFiles.length;k++)$scope.draggedFiles[k].id===fileId&&$scope.draggedFiles.splice(k,1);$scope.uploadMedia()})})},$scope.uploadToLibrary=function(files){$scope.uploadComp=!1,$scope.imageMoved=!1,$scope.draggedDivChanged=!1,$mdPanel.open(configData("upload_to_lib")),$scope.files=files},$scope.openLibrary=function(){$scope.libraryVisible?$scope.libraryVisible&&($scope.libraryVisible=!1):($scope.libraryVisible=!0,$scope.uploadMedia())},$scope.editItem=function(item){item.editing=!0},$scope.doneEditing=function(fileId,item){var data={};item.description&&(data.description=item.description),item.name&&(data.name=item.name),$scope.updateMedia(fileId,data),item.editing=!1},$scope.updateMedia=function(fileId,data){media.updateMedia(fileId,data).then(function(response){$scope.uploadMedia()})},$scope.uploadMedia=function(){$scope.collection.fetch().then(function(response){for(var i=0;i<$scope.collection.models.length;i++)if($scope.draggedFiles&&$scope.draggedFiles.length>0)for(var j=0;j<$scope.draggedFiles.length;j++)$scope.draggedFiles[j].id===$scope.collection.models[i].data.id&&($scope.collection.models[i].data.selectedClass=!0);else $scope.collection.models[i].data.selectedClass=!1})},$scope.$watch("files",function(files){if(null!==files){if($scope.dragClass=!1,!angular.isArray(files))return void $timeout(function(){$scope.files=files=[files]});for(var promises=[],i=0;i<files.length;i++)$scope.errorMsg=null,f=files[i],!1===$scope.imageMoved&&promises.push($scope.saveMedia(f));promises.length>0&&$q.all(promises).then(function(data){$scope.uploadComp=!0,$scope.uploadMedia(),!0===$scope.draggedDivChanged&&angular.forEach(data,function(dragged){$scope.draggedFiles.push(dragged.data)})}).catch(function(err){if($scope.uploadComp=!0,err)throw err})}var f}),$scope.updateFilesModel=function(files){if(null!==files){if(!angular.isArray(files))return void $timeout(function(){$scope.files=files=[files]});for(var promises=[],i=0;i<files.length;i++)$scope.errorMsg=null,f=files[i],promises.push($scope.saveMedia(f));promises.length>0&&$q.all(promises).then(function(data){$scope.uploadComp=!0,$scope.uploadMedia(),!0===$scope.draggedDivChanged&&angular.forEach(data,function(dragged){$scope.draggedFiles.push(dragged.data)})}).catch(function(err){if($scope.uploadComp=!0,err)throw err})}var f},$scope.createTag=function(query,fileId,tags){var data={name:query};media.createTag(data).then(function(response){if(void 0!==fileId&&void 0!==tags){var dataRes={};$scope.tagsModel.tags.push(response.data.payload),dataRes.tags=$scope.tagsModel.tags,$scope.updateMedia(fileId,dataRes)}})},$scope.saveMedia=function(file){return Stratus.Environment.get("production")||console.log(["savemedia"],file),file.errorMsg=null,file.uploadStatus=!1,file.errorUpload=!1,file.upload=Upload.upload({url:"//app.sitetheory.io:3000/?session="+_.cookie("SITETHEORY")+($scope.infoId?"&id="+$scope.infoId:""),data:{file:file}}),file.upload.then(function(response){file.result=response.data,file.uploadStatus=!0,file.errorUpload=!1,$scope.infoId=null,$scope.imageSrc=file.result.url},function(response){!0===response.config.data.file.upload.aborted?(file.uploadStatus=!1,file.errorUpload=!0,file.errorMsg="Aborted"):(file.uploadStatus=!1,file.errorUpload=!0,file.errorMsg="Server Error! Please try again")}),file.upload.progress(function(evt){file.progress=Math.min(100,parseInt(100*evt.loaded/evt.total))}),file.upload},$scope.addClassOnPopup=function(event){angular.element(document.querySelector(jQuery(event.target).attr("data-target"))).addClass(jQuery(event.target).attr("data-class"))},$scope.addDeleteMedia=function(selectedStatus,fileId,$event){if(!0===selectedStatus){for(var k=0;k<$scope.draggedFiles.length;k++)if($scope.draggedFiles[k].id===fileId){$scope.draggedFiles.splice(k,1);for(var j=0;j<$scope.collection.models.length;j++)$scope.collection.models[j].data.id===fileId&&($scope.collection.models[j].data.selectedClass=!1,angular.element($event.currentTarget).removeClass("minus_icon"),angular.element($event.currentTarget).addClass("add_icon"))}}else!1!==selectedStatus&&void 0!==selectedStatus||media.fetchOneMedia(fileId).then(function(response){$scope.draggedFiles.push(response.data.payload);for(var j=0;j<$scope.collection.models.length;j++)$scope.collection.models[j].data.id===fileId&&($scope.collection.models[j].data.selectedClass=!0,angular.element($event.currentTarget).removeClass("add_icon"),angular.element($event.currentTarget).addClass("minus_icon"))})}},templateUrl:Stratus.BaseUrl+Stratus.BundlePath+"components/mediaSelector"+(Stratus.Environment.get("production")?".min":"")+".html"}});